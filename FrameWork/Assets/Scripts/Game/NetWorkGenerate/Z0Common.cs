// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Z0_Common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Pb {

  /// <summary>Holder for reflection information generated from Z0_Common.proto</summary>
  public static partial class Z0CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for Z0_Common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Z0CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9aMF9Db21tb24ucHJvdG8SAnBiIggKBkNvbW1vbiLhBQoGT3BlblZvEg4K",
            "Bm9wZW5JZBgBIAEoCRIRCglhdmF0YXJVcmwYAiABKAkSEAoIbmlja05hbWUY",
            "AyABKAkSEgoKbHVja3lWYWx1ZRgEIAEoAxIYChBsYXN0Q3Jvc3NEYXlUaW1l",
            "GAUgASgDEhkKEWxhc3RDcm9zc1dlZWtUaW1lGAYgASgDEhYKDmxhc3RBY3Rp",
            "dmVUaW1lGAcgASgDEhAKCGdpZnRDb2luGAggASgDEgsKA2V4cBgNIAEoAxIM",
            "CgRnb2xkGA4gASgDEiQKDWVxdWlwbWVudExpc3QYCSADKAsyDS5wYi5FcXVp",
            "cG1lbnQSIgoMZmlzaEJhaXRMaXN0GAogAygLMgwucGIuRmlzaEJhaXQSHgoI",
            "cHJvcExpc3QYECADKAsyDC5wYi5Qcm9wSW5mbxImCg5maXNoQnVja2V0TGlz",
            "dBgLIAMoCzIOLnBiLkZpc2hCdWNrZXQSKgoQZmlzaFBlZGlncmVlTGlzdBgM",
            "IAMoCzIQLnBiLkZpc2hQZWRpZ3JlZRIgCgtmaXNoVmF0TGlzdBgPIAMoCzIL",
            "LnBiLkZpc2hWYXQSGgoSYXV0b0Zpc2hpbmdFbmRUaW1lGBEgASgDEhgKEGFk",
            "ZEF0dGFja0VuZFRpbWUYEiABKAMSFwoPYWRkU3BlZWRFbmRUaW1lGBMgASgD",
            "Eh4KCHRhc2tMaXN0GBQgAygLMgwucGIuVGFza0luZm8SFAoMdG90YWxMaWtl",
            "TnVtGBUgASgDEhAKCGFuY2hvcklkGBYgASgJEg4KBnBvc051bRgXIAEoBRIT",
            "CgtsYXN0TGV2ZWxJZBgYIAEoBRISCgpjdXJMZXZlbElkGBkgASgFEhYKDnN0",
            "YXRlU3RhcnRUaW1lGBogASgDEiQKC3BsYXllclN0YXRlGBsgASgOMg8ucGIu",
            "UGxheWVyU3RhdGUSJgoKQmF0dGxlRmlzaBgcIAEoCzISLnBiLkJhdHRsZUZp",
            "c2hJbmZvIjsKCFByb3BJbmZvEg4KBnByb3BJZBgBIAEoBRILCgNudW0YAiAB",
            "KAUSEgoKZXhwaXJlVGltZRgDIAEoAyJkCghGaXNoSW5mbxIOCgZmaXNoSWQY",
            "ASABKAUSCwoDbnVtGAIgASgFEhQKDGJsb29kUGVyY2VudBgDIAEoARIQCghp",
            "c011dGF0ZRgEIAEoCBITCgtmaXNoR3JhZGVMdhgFIAEoBSKGAQoOQmF0dGxl",
            "RmlzaEluZm8SHgoIZmlzaEluZm8YASABKAsyDC5wYi5GaXNoSW5mbxIQCgho",
            "b29rVGltZRgCIAEoAxIaChJiYXR0bGVEdXJhdGlvbk1pbGwYAyABKAMSFwoP",
            "YXR0YWNrU3RhcnRUaW1lGAQgASgDEg0KBWJsb29kGAUgASgBIjoKCkZpc2hC",
            "dWNrZXQSHgoIZmlzaEluZm8YASABKAsyDC5wYi5GaXNoSW5mbxIMCgRyYW5r",
            "GAUgASgFIkEKDEZpc2hQZWRpZ3JlZRIeCghmaXNoSW5mbxgBIAEoCzIMLnBi",
            "LkZpc2hJbmZvEhEKCWlzT25GaWVsZBgFIAEoCCI8CgdGaXNoVmF0Eh4KCGZp",
            "c2hJbmZvGAEgASgLMgwucGIuRmlzaEluZm8SEQoJcHV0SW5UaW1lGAIgASgD",
            "IisKCEZpc2hCYWl0Eg4KBnByb3BJZBgBIAEoBRIPCgdiYWl0TnVtGAIgASgF",
            "IjAKCmdvdEZpc2hMb2cSDgoGZmlzaElkGAEgASgFEhIKCmhhcHBlblRpbWUY",
            "AiABKAMiUQoJRXF1aXBtZW50EhAKCHVuaXF1ZUlkGAEgASgJEhMKC2VxdWlw",
            "bWVudElkGAIgASgFEgwKBHN0YXIYAyABKAUSDwoHcGVyY2VudBgEIAEoASLx",
            "AQoMQW5jaG9yREJJbmZvEhEKCWFjY291bnRJZBgBIAEoCRIQCghuaWNrTmFt",
            "ZRgCIAEoCRIPCgdoZWFkVXJsGAMgASgJEg4KBmdhbWVJZBgEIAEoBRISCgpw",
            "bGF0Zm9ybUlkGAUgASgFEg4KBm1vZGVJZBgGIAEoBRIUCgxhbGxHaWZ0VmFs",
            "dWUYByABKAESFAoMcGxheWVySWRMaXN0GAggAygJEhMKC2xhc3RMZXZlbElk",
            "GAkgASgFEhIKCmN1ckxldmVsSWQYCiABKAUSIgoMTGV2ZWxFeHBMaXN0GAsg",
            "AygLMgwucGIuTGV2ZWxFeHAiKAoITGV2ZWxFeHASDwoHbGV2ZWxJZBgBIAEo",
            "BRILCgNleHAYAiABKAUiUgoKT3BlbkJhc2VWbxIOCgZvcGVuSWQYASABKAkS",
            "EQoJYXZhdGFyVXJsGAIgASgJEhAKCG5pY2tOYW1lGAMgASgJEg8KB2NvbnRl",
            "bnQYBCABKAkiqAEKCFRhc2tJbmZvEg8KB3Rhc2tVaWQYASABKAkSDgoGdGFz",
            "a0lkGAIgASgFEiIKCnRhc2tTdGF0dXMYAyABKA4yDi5wYi5UYXNrU3RhdHVz",
            "EhQKDHRhc2tQcm9ncmVzcxgEIAEoBRIPCgdlbmRUaW1lGAUgASgDEhEKCXN0",
            "YXJ0VGltZRgGIAEoAxIdChVzZXJ2ZXJBTGxUYXNrUHJvZ3Jlc3MYByABKAUq",
            "RgoIUmFua1R5cGUSEgoOUGxheWVyUmFua1dlZWsQABITCg9QbGF5ZXJSYW5r",
            "TW9udGgQARIRCg1QbGF5ZXJSYW5raW5nEAIqJgoHRXJyQ29kZRILCgdTdWNj",
            "ZXNzEAASDgoKQ29tbW9uRmFpbBABKikKCEl0ZW1UeXBlEgsKB0lUX1Byb3AQ",
            "ABIQCgxJVF9FcXVpcG1lbnQQASo+CgtQbGF5ZXJTdGF0ZRIICgRGcmVlEAAS",
            "DwoLU3Bpbm5pbmdSb2QQARIICgRCSVRFEAISCgoGQXR0YWNrEAMqSgoKVGFz",
            "a1N0YXR1cxIOCgpOb3RTdGFydGVkEAASDgoKSW5jb21wbGV0ZRABEgwKCENv",
            "bXBsZXRlEAISDgoKUmV3YXJkU2VudBADQgdaBS4vO3BiYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Pb.RankType), typeof(global::Pb.ErrCode), typeof(global::Pb.ItemType), typeof(global::Pb.PlayerState), typeof(global::Pb.TaskStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.Common), global::Pb.Common.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.OpenVo), global::Pb.OpenVo.Parser, new[]{ "OpenId", "AvatarUrl", "NickName", "LuckyValue", "LastCrossDayTime", "LastCrossWeekTime", "LastActiveTime", "GiftCoin", "Exp", "Gold", "EquipmentList", "FishBaitList", "PropList", "FishBucketList", "FishPedigreeList", "FishVatList", "AutoFishingEndTime", "AddAttackEndTime", "AddSpeedEndTime", "TaskList", "TotalLikeNum", "AnchorId", "PosNum", "LastLevelId", "CurLevelId", "StateStartTime", "PlayerState", "BattleFish" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.PropInfo), global::Pb.PropInfo.Parser, new[]{ "PropId", "Num", "ExpireTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.FishInfo), global::Pb.FishInfo.Parser, new[]{ "FishId", "Num", "BloodPercent", "IsMutate", "FishGradeLv" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.BattleFishInfo), global::Pb.BattleFishInfo.Parser, new[]{ "FishInfo", "HookTime", "BattleDurationMill", "AttackStartTime", "Blood" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.FishBucket), global::Pb.FishBucket.Parser, new[]{ "FishInfo", "Rank" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.FishPedigree), global::Pb.FishPedigree.Parser, new[]{ "FishInfo", "IsOnField" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.FishVat), global::Pb.FishVat.Parser, new[]{ "FishInfo", "PutInTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.FishBait), global::Pb.FishBait.Parser, new[]{ "PropId", "BaitNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.gotFishLog), global::Pb.gotFishLog.Parser, new[]{ "FishId", "HappenTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.Equipment), global::Pb.Equipment.Parser, new[]{ "UniqueId", "EquipmentId", "Star", "Percent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.AnchorDBInfo), global::Pb.AnchorDBInfo.Parser, new[]{ "AccountId", "NickName", "HeadUrl", "GameId", "PlatformId", "ModeId", "AllGiftValue", "PlayerIdList", "LastLevelId", "CurLevelId", "LevelExpList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.LevelExp), global::Pb.LevelExp.Parser, new[]{ "LevelId", "Exp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.OpenBaseVo), global::Pb.OpenBaseVo.Parser, new[]{ "OpenId", "AvatarUrl", "NickName", "Content" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.TaskInfo), global::Pb.TaskInfo.Parser, new[]{ "TaskUid", "TaskId", "TaskStatus", "TaskProgress", "EndTime", "StartTime", "ServerALlTaskProgress" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RankType {
    /// <summary>
    /// 玩家周排名
    /// </summary>
    [pbr::OriginalName("PlayerRankWeek")] PlayerRankWeek = 0,
    /// <summary>
    /// 玩家月排名
    /// </summary>
    [pbr::OriginalName("PlayerRankMonth")] PlayerRankMonth = 1,
    /// <summary>
    /// 玩家段位排名
    /// </summary>
    [pbr::OriginalName("PlayerRanking")] PlayerRanking = 2,
  }

  public enum ErrCode {
    /// <summary>
    ///成功
    /// </summary>
    [pbr::OriginalName("Success")] Success = 0,
    /// <summary>
    /// 通用请求错误
    /// </summary>
    [pbr::OriginalName("CommonFail")] CommonFail = 1,
  }

  /// <summary>
  /// 物品类型
  /// </summary>
  public enum ItemType {
    /// <summary>
    /// 道具
    /// </summary>
    [pbr::OriginalName("IT_Prop")] ItProp = 0,
    /// <summary>
    /// 装备
    /// </summary>
    [pbr::OriginalName("IT_Equipment")] ItEquipment = 1,
  }

  /// <summary>
  /// 玩家钓鱼时的不同状态
  /// </summary>
  public enum PlayerState {
    /// <summary>
    ///空闲状态 （准备甩干）
    /// </summary>
    [pbr::OriginalName("Free")] Free = 0,
    /// <summary>
    ///甩杆
    /// </summary>
    [pbr::OriginalName("SpinningRod")] SpinningRod = 1,
    /// <summary>
    ///鱼上钩（准备战斗  ）
    /// </summary>
    [pbr::OriginalName("BITE")] Bite = 2,
    /// <summary>
    ///战斗期间
    /// </summary>
    [pbr::OriginalName("Attack")] Attack = 3,
  }

  public enum TaskStatus {
    /// <summary>
    /// 未开始
    /// </summary>
    [pbr::OriginalName("NotStarted")] NotStarted = 0,
    /// <summary>
    /// 未完成
    /// </summary>
    [pbr::OriginalName("Incomplete")] Incomplete = 1,
    [pbr::OriginalName("Complete")] Complete = 2,
    /// <summary>
    /// 奖励已发
    /// </summary>
    [pbr::OriginalName("RewardSent")] RewardSent = 3,
  }

  #endregion

  #region Messages
  public sealed partial class Common : pb::IMessage<Common>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Common> _parser = new pb::MessageParser<Common>(() => new Common());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Common> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.Z0CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Common() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Common(Common other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Common Clone() {
      return new Common(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Common);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Common other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Common other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 玩家数据
  /// </summary>
  public sealed partial class OpenVo : pb::IMessage<OpenVo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OpenVo> _parser = new pb::MessageParser<OpenVo>(() => new OpenVo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OpenVo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.Z0CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OpenVo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OpenVo(OpenVo other) : this() {
      openId_ = other.openId_;
      avatarUrl_ = other.avatarUrl_;
      nickName_ = other.nickName_;
      luckyValue_ = other.luckyValue_;
      lastCrossDayTime_ = other.lastCrossDayTime_;
      lastCrossWeekTime_ = other.lastCrossWeekTime_;
      lastActiveTime_ = other.lastActiveTime_;
      giftCoin_ = other.giftCoin_;
      exp_ = other.exp_;
      gold_ = other.gold_;
      equipmentList_ = other.equipmentList_.Clone();
      fishBaitList_ = other.fishBaitList_.Clone();
      propList_ = other.propList_.Clone();
      fishBucketList_ = other.fishBucketList_.Clone();
      fishPedigreeList_ = other.fishPedigreeList_.Clone();
      fishVatList_ = other.fishVatList_.Clone();
      autoFishingEndTime_ = other.autoFishingEndTime_;
      addAttackEndTime_ = other.addAttackEndTime_;
      addSpeedEndTime_ = other.addSpeedEndTime_;
      taskList_ = other.taskList_.Clone();
      totalLikeNum_ = other.totalLikeNum_;
      anchorId_ = other.anchorId_;
      posNum_ = other.posNum_;
      lastLevelId_ = other.lastLevelId_;
      curLevelId_ = other.curLevelId_;
      stateStartTime_ = other.stateStartTime_;
      playerState_ = other.playerState_;
      battleFish_ = other.battleFish_ != null ? other.battleFish_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OpenVo Clone() {
      return new OpenVo(this);
    }

    /// <summary>Field number for the "openId" field.</summary>
    public const int OpenIdFieldNumber = 1;
    private string openId_ = "";
    /// <summary>
    /// openId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OpenId {
      get { return openId_; }
      set {
        openId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatarUrl" field.</summary>
    public const int AvatarUrlFieldNumber = 2;
    private string avatarUrl_ = "";
    /// <summary>
    /// 用户头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AvatarUrl {
      get { return avatarUrl_; }
      set {
        avatarUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickName" field.</summary>
    public const int NickNameFieldNumber = 3;
    private string nickName_ = "";
    /// <summary>
    /// 昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "luckyValue" field.</summary>
    public const int LuckyValueFieldNumber = 4;
    private long luckyValue_;
    /// <summary>
    /// (幸运值)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LuckyValue {
      get { return luckyValue_; }
      set {
        luckyValue_ = value;
      }
    }

    /// <summary>Field number for the "lastCrossDayTime" field.</summary>
    public const int LastCrossDayTimeFieldNumber = 5;
    private long lastCrossDayTime_;
    /// <summary>
    /// 上次跨天时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastCrossDayTime {
      get { return lastCrossDayTime_; }
      set {
        lastCrossDayTime_ = value;
      }
    }

    /// <summary>Field number for the "lastCrossWeekTime" field.</summary>
    public const int LastCrossWeekTimeFieldNumber = 6;
    private long lastCrossWeekTime_;
    /// <summary>
    /// 上次跨周时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastCrossWeekTime {
      get { return lastCrossWeekTime_; }
      set {
        lastCrossWeekTime_ = value;
      }
    }

    /// <summary>Field number for the "lastActiveTime" field.</summary>
    public const int LastActiveTimeFieldNumber = 7;
    private long lastActiveTime_;
    /// <summary>
    /// 上次活跃时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastActiveTime {
      get { return lastActiveTime_; }
      set {
        lastActiveTime_ = value;
      }
    }

    /// <summary>Field number for the "giftCoin" field.</summary>
    public const int GiftCoinFieldNumber = 8;
    private long giftCoin_;
    /// <summary>
    /// 礼物币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long GiftCoin {
      get { return giftCoin_; }
      set {
        giftCoin_ = value;
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 13;
    private long exp_;
    /// <summary>
    /// 经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    /// <summary>Field number for the "gold" field.</summary>
    public const int GoldFieldNumber = 14;
    private long gold_;
    /// <summary>
    /// 金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    /// <summary>Field number for the "equipmentList" field.</summary>
    public const int EquipmentListFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Pb.Equipment> _repeated_equipmentList_codec
        = pb::FieldCodec.ForMessage(74, global::Pb.Equipment.Parser);
    private readonly pbc::RepeatedField<global::Pb.Equipment> equipmentList_ = new pbc::RepeatedField<global::Pb.Equipment>();
    /// <summary>
    /// 装备列表 【9个】
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Pb.Equipment> EquipmentList {
      get { return equipmentList_; }
    }

    /// <summary>Field number for the "fishBaitList" field.</summary>
    public const int FishBaitListFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Pb.FishBait> _repeated_fishBaitList_codec
        = pb::FieldCodec.ForMessage(82, global::Pb.FishBait.Parser);
    private readonly pbc::RepeatedField<global::Pb.FishBait> fishBaitList_ = new pbc::RepeatedField<global::Pb.FishBait>();
    /// <summary>
    /// 鱼饵列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Pb.FishBait> FishBaitList {
      get { return fishBaitList_; }
    }

    /// <summary>Field number for the "propList" field.</summary>
    public const int PropListFieldNumber = 16;
    private static readonly pb::FieldCodec<global::Pb.PropInfo> _repeated_propList_codec
        = pb::FieldCodec.ForMessage(130, global::Pb.PropInfo.Parser);
    private readonly pbc::RepeatedField<global::Pb.PropInfo> propList_ = new pbc::RepeatedField<global::Pb.PropInfo>();
    /// <summary>
    /// 道具列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Pb.PropInfo> PropList {
      get { return propList_; }
    }

    /// <summary>Field number for the "fishBucketList" field.</summary>
    public const int FishBucketListFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Pb.FishBucket> _repeated_fishBucketList_codec
        = pb::FieldCodec.ForMessage(90, global::Pb.FishBucket.Parser);
    private readonly pbc::RepeatedField<global::Pb.FishBucket> fishBucketList_ = new pbc::RepeatedField<global::Pb.FishBucket>();
    /// <summary>
    /// 鱼桶的鱼的列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Pb.FishBucket> FishBucketList {
      get { return fishBucketList_; }
    }

    /// <summary>Field number for the "fishPedigreeList" field.</summary>
    public const int FishPedigreeListFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Pb.FishPedigree> _repeated_fishPedigreeList_codec
        = pb::FieldCodec.ForMessage(98, global::Pb.FishPedigree.Parser);
    private readonly pbc::RepeatedField<global::Pb.FishPedigree> fishPedigreeList_ = new pbc::RepeatedField<global::Pb.FishPedigree>();
    /// <summary>
    /// 已经解锁的鱼谱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Pb.FishPedigree> FishPedigreeList {
      get { return fishPedigreeList_; }
    }

    /// <summary>Field number for the "fishVatList" field.</summary>
    public const int FishVatListFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Pb.FishVat> _repeated_fishVatList_codec
        = pb::FieldCodec.ForMessage(122, global::Pb.FishVat.Parser);
    private readonly pbc::RepeatedField<global::Pb.FishVat> fishVatList_ = new pbc::RepeatedField<global::Pb.FishVat>();
    /// <summary>
    /// 鱼缸里面的鱼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Pb.FishVat> FishVatList {
      get { return fishVatList_; }
    }

    /// <summary>Field number for the "autoFishingEndTime" field.</summary>
    public const int AutoFishingEndTimeFieldNumber = 17;
    private long autoFishingEndTime_;
    /// <summary>
    /// 自动钓鱼结束时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AutoFishingEndTime {
      get { return autoFishingEndTime_; }
      set {
        autoFishingEndTime_ = value;
      }
    }

    /// <summary>Field number for the "addAttackEndTime" field.</summary>
    public const int AddAttackEndTimeFieldNumber = 18;
    private long addAttackEndTime_;
    /// <summary>
    /// 增加攻击力结束时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AddAttackEndTime {
      get { return addAttackEndTime_; }
      set {
        addAttackEndTime_ = value;
      }
    }

    /// <summary>Field number for the "addSpeedEndTime" field.</summary>
    public const int AddSpeedEndTimeFieldNumber = 19;
    private long addSpeedEndTime_;
    /// <summary>
    /// 增加攻速结束时间错
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AddSpeedEndTime {
      get { return addSpeedEndTime_; }
      set {
        addSpeedEndTime_ = value;
      }
    }

    /// <summary>Field number for the "taskList" field.</summary>
    public const int TaskListFieldNumber = 20;
    private static readonly pb::FieldCodec<global::Pb.TaskInfo> _repeated_taskList_codec
        = pb::FieldCodec.ForMessage(162, global::Pb.TaskInfo.Parser);
    private readonly pbc::RepeatedField<global::Pb.TaskInfo> taskList_ = new pbc::RepeatedField<global::Pb.TaskInfo>();
    /// <summary>
    /// 任务列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Pb.TaskInfo> TaskList {
      get { return taskList_; }
    }

    /// <summary>Field number for the "totalLikeNum" field.</summary>
    public const int TotalLikeNumFieldNumber = 21;
    private long totalLikeNum_;
    /// <summary>
    /// 累计点赞数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalLikeNum {
      get { return totalLikeNum_; }
      set {
        totalLikeNum_ = value;
      }
    }

    /// <summary>Field number for the "anchorId" field.</summary>
    public const int AnchorIdFieldNumber = 22;
    private string anchorId_ = "";
    /// <summary>
    /// 当前直播间主播的id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AnchorId {
      get { return anchorId_; }
      set {
        anchorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "posNum" field.</summary>
    public const int PosNumFieldNumber = 23;
    private int posNum_;
    /// <summary>
    /// 当前直播间的位置编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosNum {
      get { return posNum_; }
      set {
        posNum_ = value;
      }
    }

    /// <summary>Field number for the "lastLevelId" field.</summary>
    public const int LastLevelIdFieldNumber = 24;
    private int lastLevelId_;
    /// <summary>
    /// 上一次关卡id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LastLevelId {
      get { return lastLevelId_; }
      set {
        lastLevelId_ = value;
      }
    }

    /// <summary>Field number for the "curLevelId" field.</summary>
    public const int CurLevelIdFieldNumber = 25;
    private int curLevelId_;
    /// <summary>
    /// 当前关卡id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurLevelId {
      get { return curLevelId_; }
      set {
        curLevelId_ = value;
      }
    }

    /// <summary>Field number for the "stateStartTime" field.</summary>
    public const int StateStartTimeFieldNumber = 26;
    private long stateStartTime_;
    /// <summary>
    /// 状态开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StateStartTime {
      get { return stateStartTime_; }
      set {
        stateStartTime_ = value;
      }
    }

    /// <summary>Field number for the "playerState" field.</summary>
    public const int PlayerStateFieldNumber = 27;
    private global::Pb.PlayerState playerState_ = global::Pb.PlayerState.Free;
    /// <summary>
    ///  玩家的状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Pb.PlayerState PlayerState {
      get { return playerState_; }
      set {
        playerState_ = value;
      }
    }

    /// <summary>Field number for the "BattleFish" field.</summary>
    public const int BattleFishFieldNumber = 28;
    private global::Pb.BattleFishInfo battleFish_;
    /// <summary>
    /// 战斗过程的鱼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Pb.BattleFishInfo BattleFish {
      get { return battleFish_; }
      set {
        battleFish_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OpenVo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OpenVo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OpenId != other.OpenId) return false;
      if (AvatarUrl != other.AvatarUrl) return false;
      if (NickName != other.NickName) return false;
      if (LuckyValue != other.LuckyValue) return false;
      if (LastCrossDayTime != other.LastCrossDayTime) return false;
      if (LastCrossWeekTime != other.LastCrossWeekTime) return false;
      if (LastActiveTime != other.LastActiveTime) return false;
      if (GiftCoin != other.GiftCoin) return false;
      if (Exp != other.Exp) return false;
      if (Gold != other.Gold) return false;
      if(!equipmentList_.Equals(other.equipmentList_)) return false;
      if(!fishBaitList_.Equals(other.fishBaitList_)) return false;
      if(!propList_.Equals(other.propList_)) return false;
      if(!fishBucketList_.Equals(other.fishBucketList_)) return false;
      if(!fishPedigreeList_.Equals(other.fishPedigreeList_)) return false;
      if(!fishVatList_.Equals(other.fishVatList_)) return false;
      if (AutoFishingEndTime != other.AutoFishingEndTime) return false;
      if (AddAttackEndTime != other.AddAttackEndTime) return false;
      if (AddSpeedEndTime != other.AddSpeedEndTime) return false;
      if(!taskList_.Equals(other.taskList_)) return false;
      if (TotalLikeNum != other.TotalLikeNum) return false;
      if (AnchorId != other.AnchorId) return false;
      if (PosNum != other.PosNum) return false;
      if (LastLevelId != other.LastLevelId) return false;
      if (CurLevelId != other.CurLevelId) return false;
      if (StateStartTime != other.StateStartTime) return false;
      if (PlayerState != other.PlayerState) return false;
      if (!object.Equals(BattleFish, other.BattleFish)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (OpenId.Length != 0) hash ^= OpenId.GetHashCode();
      if (AvatarUrl.Length != 0) hash ^= AvatarUrl.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (LuckyValue != 0L) hash ^= LuckyValue.GetHashCode();
      if (LastCrossDayTime != 0L) hash ^= LastCrossDayTime.GetHashCode();
      if (LastCrossWeekTime != 0L) hash ^= LastCrossWeekTime.GetHashCode();
      if (LastActiveTime != 0L) hash ^= LastActiveTime.GetHashCode();
      if (GiftCoin != 0L) hash ^= GiftCoin.GetHashCode();
      if (Exp != 0L) hash ^= Exp.GetHashCode();
      if (Gold != 0L) hash ^= Gold.GetHashCode();
      hash ^= equipmentList_.GetHashCode();
      hash ^= fishBaitList_.GetHashCode();
      hash ^= propList_.GetHashCode();
      hash ^= fishBucketList_.GetHashCode();
      hash ^= fishPedigreeList_.GetHashCode();
      hash ^= fishVatList_.GetHashCode();
      if (AutoFishingEndTime != 0L) hash ^= AutoFishingEndTime.GetHashCode();
      if (AddAttackEndTime != 0L) hash ^= AddAttackEndTime.GetHashCode();
      if (AddSpeedEndTime != 0L) hash ^= AddSpeedEndTime.GetHashCode();
      hash ^= taskList_.GetHashCode();
      if (TotalLikeNum != 0L) hash ^= TotalLikeNum.GetHashCode();
      if (AnchorId.Length != 0) hash ^= AnchorId.GetHashCode();
      if (PosNum != 0) hash ^= PosNum.GetHashCode();
      if (LastLevelId != 0) hash ^= LastLevelId.GetHashCode();
      if (CurLevelId != 0) hash ^= CurLevelId.GetHashCode();
      if (StateStartTime != 0L) hash ^= StateStartTime.GetHashCode();
      if (PlayerState != global::Pb.PlayerState.Free) hash ^= PlayerState.GetHashCode();
      if (battleFish_ != null) hash ^= BattleFish.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OpenId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OpenId);
      }
      if (AvatarUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AvatarUrl);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NickName);
      }
      if (LuckyValue != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(LuckyValue);
      }
      if (LastCrossDayTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(LastCrossDayTime);
      }
      if (LastCrossWeekTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(LastCrossWeekTime);
      }
      if (LastActiveTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(LastActiveTime);
      }
      if (GiftCoin != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(GiftCoin);
      }
      equipmentList_.WriteTo(output, _repeated_equipmentList_codec);
      fishBaitList_.WriteTo(output, _repeated_fishBaitList_codec);
      fishBucketList_.WriteTo(output, _repeated_fishBucketList_codec);
      fishPedigreeList_.WriteTo(output, _repeated_fishPedigreeList_codec);
      if (Exp != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(Exp);
      }
      if (Gold != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(Gold);
      }
      fishVatList_.WriteTo(output, _repeated_fishVatList_codec);
      propList_.WriteTo(output, _repeated_propList_codec);
      if (AutoFishingEndTime != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(AutoFishingEndTime);
      }
      if (AddAttackEndTime != 0L) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(AddAttackEndTime);
      }
      if (AddSpeedEndTime != 0L) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(AddSpeedEndTime);
      }
      taskList_.WriteTo(output, _repeated_taskList_codec);
      if (TotalLikeNum != 0L) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(TotalLikeNum);
      }
      if (AnchorId.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(AnchorId);
      }
      if (PosNum != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(PosNum);
      }
      if (LastLevelId != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(LastLevelId);
      }
      if (CurLevelId != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(CurLevelId);
      }
      if (StateStartTime != 0L) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(StateStartTime);
      }
      if (PlayerState != global::Pb.PlayerState.Free) {
        output.WriteRawTag(216, 1);
        output.WriteEnum((int) PlayerState);
      }
      if (battleFish_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(BattleFish);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OpenId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OpenId);
      }
      if (AvatarUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AvatarUrl);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NickName);
      }
      if (LuckyValue != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(LuckyValue);
      }
      if (LastCrossDayTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(LastCrossDayTime);
      }
      if (LastCrossWeekTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(LastCrossWeekTime);
      }
      if (LastActiveTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(LastActiveTime);
      }
      if (GiftCoin != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(GiftCoin);
      }
      equipmentList_.WriteTo(ref output, _repeated_equipmentList_codec);
      fishBaitList_.WriteTo(ref output, _repeated_fishBaitList_codec);
      fishBucketList_.WriteTo(ref output, _repeated_fishBucketList_codec);
      fishPedigreeList_.WriteTo(ref output, _repeated_fishPedigreeList_codec);
      if (Exp != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(Exp);
      }
      if (Gold != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(Gold);
      }
      fishVatList_.WriteTo(ref output, _repeated_fishVatList_codec);
      propList_.WriteTo(ref output, _repeated_propList_codec);
      if (AutoFishingEndTime != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(AutoFishingEndTime);
      }
      if (AddAttackEndTime != 0L) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(AddAttackEndTime);
      }
      if (AddSpeedEndTime != 0L) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(AddSpeedEndTime);
      }
      taskList_.WriteTo(ref output, _repeated_taskList_codec);
      if (TotalLikeNum != 0L) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(TotalLikeNum);
      }
      if (AnchorId.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(AnchorId);
      }
      if (PosNum != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(PosNum);
      }
      if (LastLevelId != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(LastLevelId);
      }
      if (CurLevelId != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(CurLevelId);
      }
      if (StateStartTime != 0L) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(StateStartTime);
      }
      if (PlayerState != global::Pb.PlayerState.Free) {
        output.WriteRawTag(216, 1);
        output.WriteEnum((int) PlayerState);
      }
      if (battleFish_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(BattleFish);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (OpenId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OpenId);
      }
      if (AvatarUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarUrl);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (LuckyValue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LuckyValue);
      }
      if (LastCrossDayTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastCrossDayTime);
      }
      if (LastCrossWeekTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastCrossWeekTime);
      }
      if (LastActiveTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastActiveTime);
      }
      if (GiftCoin != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(GiftCoin);
      }
      if (Exp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Exp);
      }
      if (Gold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gold);
      }
      size += equipmentList_.CalculateSize(_repeated_equipmentList_codec);
      size += fishBaitList_.CalculateSize(_repeated_fishBaitList_codec);
      size += propList_.CalculateSize(_repeated_propList_codec);
      size += fishBucketList_.CalculateSize(_repeated_fishBucketList_codec);
      size += fishPedigreeList_.CalculateSize(_repeated_fishPedigreeList_codec);
      size += fishVatList_.CalculateSize(_repeated_fishVatList_codec);
      if (AutoFishingEndTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(AutoFishingEndTime);
      }
      if (AddAttackEndTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(AddAttackEndTime);
      }
      if (AddSpeedEndTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(AddSpeedEndTime);
      }
      size += taskList_.CalculateSize(_repeated_taskList_codec);
      if (TotalLikeNum != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(TotalLikeNum);
      }
      if (AnchorId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AnchorId);
      }
      if (PosNum != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PosNum);
      }
      if (LastLevelId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LastLevelId);
      }
      if (CurLevelId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CurLevelId);
      }
      if (StateStartTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(StateStartTime);
      }
      if (PlayerState != global::Pb.PlayerState.Free) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PlayerState);
      }
      if (battleFish_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BattleFish);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OpenVo other) {
      if (other == null) {
        return;
      }
      if (other.OpenId.Length != 0) {
        OpenId = other.OpenId;
      }
      if (other.AvatarUrl.Length != 0) {
        AvatarUrl = other.AvatarUrl;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.LuckyValue != 0L) {
        LuckyValue = other.LuckyValue;
      }
      if (other.LastCrossDayTime != 0L) {
        LastCrossDayTime = other.LastCrossDayTime;
      }
      if (other.LastCrossWeekTime != 0L) {
        LastCrossWeekTime = other.LastCrossWeekTime;
      }
      if (other.LastActiveTime != 0L) {
        LastActiveTime = other.LastActiveTime;
      }
      if (other.GiftCoin != 0L) {
        GiftCoin = other.GiftCoin;
      }
      if (other.Exp != 0L) {
        Exp = other.Exp;
      }
      if (other.Gold != 0L) {
        Gold = other.Gold;
      }
      equipmentList_.Add(other.equipmentList_);
      fishBaitList_.Add(other.fishBaitList_);
      propList_.Add(other.propList_);
      fishBucketList_.Add(other.fishBucketList_);
      fishPedigreeList_.Add(other.fishPedigreeList_);
      fishVatList_.Add(other.fishVatList_);
      if (other.AutoFishingEndTime != 0L) {
        AutoFishingEndTime = other.AutoFishingEndTime;
      }
      if (other.AddAttackEndTime != 0L) {
        AddAttackEndTime = other.AddAttackEndTime;
      }
      if (other.AddSpeedEndTime != 0L) {
        AddSpeedEndTime = other.AddSpeedEndTime;
      }
      taskList_.Add(other.taskList_);
      if (other.TotalLikeNum != 0L) {
        TotalLikeNum = other.TotalLikeNum;
      }
      if (other.AnchorId.Length != 0) {
        AnchorId = other.AnchorId;
      }
      if (other.PosNum != 0) {
        PosNum = other.PosNum;
      }
      if (other.LastLevelId != 0) {
        LastLevelId = other.LastLevelId;
      }
      if (other.CurLevelId != 0) {
        CurLevelId = other.CurLevelId;
      }
      if (other.StateStartTime != 0L) {
        StateStartTime = other.StateStartTime;
      }
      if (other.PlayerState != global::Pb.PlayerState.Free) {
        PlayerState = other.PlayerState;
      }
      if (other.battleFish_ != null) {
        if (battleFish_ == null) {
          BattleFish = new global::Pb.BattleFishInfo();
        }
        BattleFish.MergeFrom(other.BattleFish);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OpenId = input.ReadString();
            break;
          }
          case 18: {
            AvatarUrl = input.ReadString();
            break;
          }
          case 26: {
            NickName = input.ReadString();
            break;
          }
          case 32: {
            LuckyValue = input.ReadInt64();
            break;
          }
          case 40: {
            LastCrossDayTime = input.ReadInt64();
            break;
          }
          case 48: {
            LastCrossWeekTime = input.ReadInt64();
            break;
          }
          case 56: {
            LastActiveTime = input.ReadInt64();
            break;
          }
          case 64: {
            GiftCoin = input.ReadInt64();
            break;
          }
          case 74: {
            equipmentList_.AddEntriesFrom(input, _repeated_equipmentList_codec);
            break;
          }
          case 82: {
            fishBaitList_.AddEntriesFrom(input, _repeated_fishBaitList_codec);
            break;
          }
          case 90: {
            fishBucketList_.AddEntriesFrom(input, _repeated_fishBucketList_codec);
            break;
          }
          case 98: {
            fishPedigreeList_.AddEntriesFrom(input, _repeated_fishPedigreeList_codec);
            break;
          }
          case 104: {
            Exp = input.ReadInt64();
            break;
          }
          case 112: {
            Gold = input.ReadInt64();
            break;
          }
          case 122: {
            fishVatList_.AddEntriesFrom(input, _repeated_fishVatList_codec);
            break;
          }
          case 130: {
            propList_.AddEntriesFrom(input, _repeated_propList_codec);
            break;
          }
          case 136: {
            AutoFishingEndTime = input.ReadInt64();
            break;
          }
          case 144: {
            AddAttackEndTime = input.ReadInt64();
            break;
          }
          case 152: {
            AddSpeedEndTime = input.ReadInt64();
            break;
          }
          case 162: {
            taskList_.AddEntriesFrom(input, _repeated_taskList_codec);
            break;
          }
          case 168: {
            TotalLikeNum = input.ReadInt64();
            break;
          }
          case 178: {
            AnchorId = input.ReadString();
            break;
          }
          case 184: {
            PosNum = input.ReadInt32();
            break;
          }
          case 192: {
            LastLevelId = input.ReadInt32();
            break;
          }
          case 200: {
            CurLevelId = input.ReadInt32();
            break;
          }
          case 208: {
            StateStartTime = input.ReadInt64();
            break;
          }
          case 216: {
            PlayerState = (global::Pb.PlayerState) input.ReadEnum();
            break;
          }
          case 226: {
            if (battleFish_ == null) {
              BattleFish = new global::Pb.BattleFishInfo();
            }
            input.ReadMessage(BattleFish);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OpenId = input.ReadString();
            break;
          }
          case 18: {
            AvatarUrl = input.ReadString();
            break;
          }
          case 26: {
            NickName = input.ReadString();
            break;
          }
          case 32: {
            LuckyValue = input.ReadInt64();
            break;
          }
          case 40: {
            LastCrossDayTime = input.ReadInt64();
            break;
          }
          case 48: {
            LastCrossWeekTime = input.ReadInt64();
            break;
          }
          case 56: {
            LastActiveTime = input.ReadInt64();
            break;
          }
          case 64: {
            GiftCoin = input.ReadInt64();
            break;
          }
          case 74: {
            equipmentList_.AddEntriesFrom(ref input, _repeated_equipmentList_codec);
            break;
          }
          case 82: {
            fishBaitList_.AddEntriesFrom(ref input, _repeated_fishBaitList_codec);
            break;
          }
          case 90: {
            fishBucketList_.AddEntriesFrom(ref input, _repeated_fishBucketList_codec);
            break;
          }
          case 98: {
            fishPedigreeList_.AddEntriesFrom(ref input, _repeated_fishPedigreeList_codec);
            break;
          }
          case 104: {
            Exp = input.ReadInt64();
            break;
          }
          case 112: {
            Gold = input.ReadInt64();
            break;
          }
          case 122: {
            fishVatList_.AddEntriesFrom(ref input, _repeated_fishVatList_codec);
            break;
          }
          case 130: {
            propList_.AddEntriesFrom(ref input, _repeated_propList_codec);
            break;
          }
          case 136: {
            AutoFishingEndTime = input.ReadInt64();
            break;
          }
          case 144: {
            AddAttackEndTime = input.ReadInt64();
            break;
          }
          case 152: {
            AddSpeedEndTime = input.ReadInt64();
            break;
          }
          case 162: {
            taskList_.AddEntriesFrom(ref input, _repeated_taskList_codec);
            break;
          }
          case 168: {
            TotalLikeNum = input.ReadInt64();
            break;
          }
          case 178: {
            AnchorId = input.ReadString();
            break;
          }
          case 184: {
            PosNum = input.ReadInt32();
            break;
          }
          case 192: {
            LastLevelId = input.ReadInt32();
            break;
          }
          case 200: {
            CurLevelId = input.ReadInt32();
            break;
          }
          case 208: {
            StateStartTime = input.ReadInt64();
            break;
          }
          case 216: {
            PlayerState = (global::Pb.PlayerState) input.ReadEnum();
            break;
          }
          case 226: {
            if (battleFish_ == null) {
              BattleFish = new global::Pb.BattleFishInfo();
            }
            input.ReadMessage(BattleFish);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 道具列表
  /// </summary>
  public sealed partial class PropInfo : pb::IMessage<PropInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PropInfo> _parser = new pb::MessageParser<PropInfo>(() => new PropInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PropInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.Z0CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropInfo(PropInfo other) : this() {
      propId_ = other.propId_;
      num_ = other.num_;
      expireTime_ = other.expireTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropInfo Clone() {
      return new PropInfo(this);
    }

    /// <summary>Field number for the "propId" field.</summary>
    public const int PropIdFieldNumber = 1;
    private int propId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PropId {
      get { return propId_; }
      set {
        propId_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 2;
    private int num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    /// <summary>Field number for the "expireTime" field.</summary>
    public const int ExpireTimeFieldNumber = 3;
    private long expireTime_;
    /// <summary>
    /// 道具过期时间时间戳 0就是永久
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ExpireTime {
      get { return expireTime_; }
      set {
        expireTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PropInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PropInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PropId != other.PropId) return false;
      if (Num != other.Num) return false;
      if (ExpireTime != other.ExpireTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PropId != 0) hash ^= PropId.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (ExpireTime != 0L) hash ^= ExpireTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PropId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropId);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (ExpireTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ExpireTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PropId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropId);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (ExpireTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ExpireTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropId);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (ExpireTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpireTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PropInfo other) {
      if (other == null) {
        return;
      }
      if (other.PropId != 0) {
        PropId = other.PropId;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      if (other.ExpireTime != 0L) {
        ExpireTime = other.ExpireTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PropId = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
          case 24: {
            ExpireTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PropId = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
          case 24: {
            ExpireTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 鱼的基础信息
  /// </summary>
  public sealed partial class FishInfo : pb::IMessage<FishInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FishInfo> _parser = new pb::MessageParser<FishInfo>(() => new FishInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FishInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.Z0CommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishInfo(FishInfo other) : this() {
      fishId_ = other.fishId_;
      num_ = other.num_;
      bloodPercent_ = other.bloodPercent_;
      isMutate_ = other.isMutate_;
      fishGradeLv_ = other.fishGradeLv_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishInfo Clone() {
      return new FishInfo(this);
    }

    /// <summary>Field number for the "fishId" field.</summary>
    public const int FishIdFieldNumber = 1;
    private int fishId_;
    /// <summary>
    /// 鱼的ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FishId {
      get { return fishId_; }
      set {
        fishId_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 2;
    private int num_;
    /// <summary>
    /// 鱼缸和鱼桶共用的唯一编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    /// <summary>Field number for the "bloodPercent" field.</summary>
    public const int BloodPercentFieldNumber = 3;
    private double bloodPercent_;
    /// <summary>
    /// 血量比例
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double BloodPercent {
      get { return bloodPercent_; }
      set {
        bloodPercent_ = value;
      }
    }

    /// <summary>Field number for the "isMutate" field.</summary>
    public const int IsMutateFieldNumber = 4;
    private bool isMutate_;
    /// <summary>
    /// 是否变异
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMutate {
      get { return isMutate_; }
      set {
        isMutate_ = value;
      }
    }

    /// <summary>Field number for the "fishGradeLv" field.</summary>
    public const int FishGradeLvFieldNumber = 5;
    private int fishGradeLv_;
    /// <summary>
    /// 鱼的品级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FishGradeLv {
      get { return fishGradeLv_; }
      set {
        fishGradeLv_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FishInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FishInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FishId != other.FishId) return false;
      if (Num != other.Num) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BloodPercent, other.BloodPercent)) return false;
      if (IsMutate != other.IsMutate) return false;
      if (FishGradeLv != other.FishGradeLv) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FishId != 0) hash ^= FishId.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (BloodPercent != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BloodPercent);
      if (IsMutate != false) hash ^= IsMutate.GetHashCode();
      if (FishGradeLv != 0) hash ^= FishGradeLv.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FishId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FishId);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (BloodPercent != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(BloodPercent);
      }
      if (IsMutate != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsMutate);
      }
      if (FishGradeLv != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FishGradeLv);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FishId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FishId);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (BloodPercent != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(BloodPercent);
      }
      if (IsMutate != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsMutate);
      }
      if (FishGradeLv != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FishGradeLv);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FishId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishId);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (BloodPercent != 0D) {
        size += 1 + 8;
      }
      if (IsMutate != false) {
        size += 1 + 1;
      }
      if (FishGradeLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishGradeLv);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FishInfo other) {
      if (other == null) {
        return;
      }
      if (other.FishId != 0) {
        FishId = other.FishId;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      if (other.BloodPercent != 0D) {
        BloodPercent = other.BloodPercent;
      }
      if (other.IsMutate != false) {
        IsMutate = other.IsMutate;
      }
      if (other.FishGradeLv != 0) {
        FishGradeLv = other.FishGradeLv;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FishId = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
          case 25: {
            BloodPercent = input.ReadDouble();
            break;
          }
          case 32: {
            IsMutate = input.ReadBool();
            break;
          }
          case 40: {
            FishGradeLv = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FishId = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
          case 25: {
            BloodPercent = input.ReadDouble();
            break;
          }
          case 32: {
            IsMutate = input.ReadBool();
            break;
          }
          case 40: {
            FishGradeLv = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 战斗过程的鱼
  /// </summary>
  public sealed partial class BattleFishInfo : pb::IMessage<BattleFishInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BattleFishInfo> _parser = new pb::MessageParser<BattleFishInfo>(() => new BattleFishInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BattleFishInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.Z0CommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattleFishInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattleFishInfo(BattleFishInfo other) : this() {
      fishInfo_ = other.fishInfo_ != null ? other.fishInfo_.Clone() : null;
      hookTime_ = other.hookTime_;
      battleDurationMill_ = other.battleDurationMill_;
      attackStartTime_ = other.attackStartTime_;
      blood_ = other.blood_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattleFishInfo Clone() {
      return new BattleFishInfo(this);
    }

    /// <summary>Field number for the "fishInfo" field.</summary>
    public const int FishInfoFieldNumber = 1;
    private global::Pb.FishInfo fishInfo_;
    /// <summary>
    /// 鱼的信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Pb.FishInfo FishInfo {
      get { return fishInfo_; }
      set {
        fishInfo_ = value;
      }
    }

    /// <summary>Field number for the "hookTime" field.</summary>
    public const int HookTimeFieldNumber = 2;
    private long hookTime_;
    /// <summary>
    /// 鱼要上钩的时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HookTime {
      get { return hookTime_; }
      set {
        hookTime_ = value;
      }
    }

    /// <summary>Field number for the "battleDurationMill" field.</summary>
    public const int BattleDurationMillFieldNumber = 3;
    private long battleDurationMill_;
    /// <summary>
    /// 战斗剩余的持续时间 （毫秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BattleDurationMill {
      get { return battleDurationMill_; }
      set {
        battleDurationMill_ = value;
      }
    }

    /// <summary>Field number for the "attackStartTime" field.</summary>
    public const int AttackStartTimeFieldNumber = 4;
    private long attackStartTime_;
    /// <summary>
    /// 上次战斗攻击开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AttackStartTime {
      get { return attackStartTime_; }
      set {
        attackStartTime_ = value;
      }
    }

    /// <summary>Field number for the "blood" field.</summary>
    public const int BloodFieldNumber = 5;
    private double blood_;
    /// <summary>
    ///当前的血量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Blood {
      get { return blood_; }
      set {
        blood_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BattleFishInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BattleFishInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FishInfo, other.FishInfo)) return false;
      if (HookTime != other.HookTime) return false;
      if (BattleDurationMill != other.BattleDurationMill) return false;
      if (AttackStartTime != other.AttackStartTime) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Blood, other.Blood)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (fishInfo_ != null) hash ^= FishInfo.GetHashCode();
      if (HookTime != 0L) hash ^= HookTime.GetHashCode();
      if (BattleDurationMill != 0L) hash ^= BattleDurationMill.GetHashCode();
      if (AttackStartTime != 0L) hash ^= AttackStartTime.GetHashCode();
      if (Blood != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Blood);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (fishInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FishInfo);
      }
      if (HookTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(HookTime);
      }
      if (BattleDurationMill != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BattleDurationMill);
      }
      if (AttackStartTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(AttackStartTime);
      }
      if (Blood != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Blood);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (fishInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FishInfo);
      }
      if (HookTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(HookTime);
      }
      if (BattleDurationMill != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BattleDurationMill);
      }
      if (AttackStartTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(AttackStartTime);
      }
      if (Blood != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Blood);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (fishInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FishInfo);
      }
      if (HookTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HookTime);
      }
      if (BattleDurationMill != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BattleDurationMill);
      }
      if (AttackStartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AttackStartTime);
      }
      if (Blood != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BattleFishInfo other) {
      if (other == null) {
        return;
      }
      if (other.fishInfo_ != null) {
        if (fishInfo_ == null) {
          FishInfo = new global::Pb.FishInfo();
        }
        FishInfo.MergeFrom(other.FishInfo);
      }
      if (other.HookTime != 0L) {
        HookTime = other.HookTime;
      }
      if (other.BattleDurationMill != 0L) {
        BattleDurationMill = other.BattleDurationMill;
      }
      if (other.AttackStartTime != 0L) {
        AttackStartTime = other.AttackStartTime;
      }
      if (other.Blood != 0D) {
        Blood = other.Blood;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fishInfo_ == null) {
              FishInfo = new global::Pb.FishInfo();
            }
            input.ReadMessage(FishInfo);
            break;
          }
          case 16: {
            HookTime = input.ReadInt64();
            break;
          }
          case 24: {
            BattleDurationMill = input.ReadInt64();
            break;
          }
          case 32: {
            AttackStartTime = input.ReadInt64();
            break;
          }
          case 41: {
            Blood = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (fishInfo_ == null) {
              FishInfo = new global::Pb.FishInfo();
            }
            input.ReadMessage(FishInfo);
            break;
          }
          case 16: {
            HookTime = input.ReadInt64();
            break;
          }
          case 24: {
            BattleDurationMill = input.ReadInt64();
            break;
          }
          case 32: {
            AttackStartTime = input.ReadInt64();
            break;
          }
          case 41: {
            Blood = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 鱼桶里面的鱼信息
  /// </summary>
  public sealed partial class FishBucket : pb::IMessage<FishBucket>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FishBucket> _parser = new pb::MessageParser<FishBucket>(() => new FishBucket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FishBucket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.Z0CommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishBucket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishBucket(FishBucket other) : this() {
      fishInfo_ = other.fishInfo_ != null ? other.fishInfo_.Clone() : null;
      rank_ = other.rank_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishBucket Clone() {
      return new FishBucket(this);
    }

    /// <summary>Field number for the "fishInfo" field.</summary>
    public const int FishInfoFieldNumber = 1;
    private global::Pb.FishInfo fishInfo_;
    /// <summary>
    /// 鱼的信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Pb.FishInfo FishInfo {
      get { return fishInfo_; }
      set {
        fishInfo_ = value;
      }
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 5;
    private int rank_;
    /// <summary>
    /// 鱼的排名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FishBucket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FishBucket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FishInfo, other.FishInfo)) return false;
      if (Rank != other.Rank) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (fishInfo_ != null) hash ^= FishInfo.GetHashCode();
      if (Rank != 0) hash ^= Rank.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (fishInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FishInfo);
      }
      if (Rank != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Rank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (fishInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FishInfo);
      }
      if (Rank != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Rank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (fishInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FishInfo);
      }
      if (Rank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FishBucket other) {
      if (other == null) {
        return;
      }
      if (other.fishInfo_ != null) {
        if (fishInfo_ == null) {
          FishInfo = new global::Pb.FishInfo();
        }
        FishInfo.MergeFrom(other.FishInfo);
      }
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fishInfo_ == null) {
              FishInfo = new global::Pb.FishInfo();
            }
            input.ReadMessage(FishInfo);
            break;
          }
          case 40: {
            Rank = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (fishInfo_ == null) {
              FishInfo = new global::Pb.FishInfo();
            }
            input.ReadMessage(FishInfo);
            break;
          }
          case 40: {
            Rank = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///鱼谱的里面的鱼
  /// </summary>
  public sealed partial class FishPedigree : pb::IMessage<FishPedigree>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FishPedigree> _parser = new pb::MessageParser<FishPedigree>(() => new FishPedigree());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FishPedigree> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.Z0CommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishPedigree() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishPedigree(FishPedigree other) : this() {
      fishInfo_ = other.fishInfo_ != null ? other.fishInfo_.Clone() : null;
      isOnField_ = other.isOnField_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishPedigree Clone() {
      return new FishPedigree(this);
    }

    /// <summary>Field number for the "fishInfo" field.</summary>
    public const int FishInfoFieldNumber = 1;
    private global::Pb.FishInfo fishInfo_;
    /// <summary>
    /// 鱼的信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Pb.FishInfo FishInfo {
      get { return fishInfo_; }
      set {
        fishInfo_ = value;
      }
    }

    /// <summary>Field number for the "isOnField" field.</summary>
    public const int IsOnFieldFieldNumber = 5;
    private bool isOnField_;
    /// <summary>
    /// 是否上阵
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsOnField {
      get { return isOnField_; }
      set {
        isOnField_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FishPedigree);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FishPedigree other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FishInfo, other.FishInfo)) return false;
      if (IsOnField != other.IsOnField) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (fishInfo_ != null) hash ^= FishInfo.GetHashCode();
      if (IsOnField != false) hash ^= IsOnField.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (fishInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FishInfo);
      }
      if (IsOnField != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsOnField);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (fishInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FishInfo);
      }
      if (IsOnField != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsOnField);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (fishInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FishInfo);
      }
      if (IsOnField != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FishPedigree other) {
      if (other == null) {
        return;
      }
      if (other.fishInfo_ != null) {
        if (fishInfo_ == null) {
          FishInfo = new global::Pb.FishInfo();
        }
        FishInfo.MergeFrom(other.FishInfo);
      }
      if (other.IsOnField != false) {
        IsOnField = other.IsOnField;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fishInfo_ == null) {
              FishInfo = new global::Pb.FishInfo();
            }
            input.ReadMessage(FishInfo);
            break;
          }
          case 40: {
            IsOnField = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (fishInfo_ == null) {
              FishInfo = new global::Pb.FishInfo();
            }
            input.ReadMessage(FishInfo);
            break;
          }
          case 40: {
            IsOnField = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 鱼缸的鱼
  /// </summary>
  public sealed partial class FishVat : pb::IMessage<FishVat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FishVat> _parser = new pb::MessageParser<FishVat>(() => new FishVat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FishVat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.Z0CommonReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishVat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishVat(FishVat other) : this() {
      fishInfo_ = other.fishInfo_ != null ? other.fishInfo_.Clone() : null;
      putInTime_ = other.putInTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishVat Clone() {
      return new FishVat(this);
    }

    /// <summary>Field number for the "fishInfo" field.</summary>
    public const int FishInfoFieldNumber = 1;
    private global::Pb.FishInfo fishInfo_;
    /// <summary>
    /// 鱼的信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Pb.FishInfo FishInfo {
      get { return fishInfo_; }
      set {
        fishInfo_ = value;
      }
    }

    /// <summary>Field number for the "putInTime" field.</summary>
    public const int PutInTimeFieldNumber = 2;
    private long putInTime_;
    /// <summary>
    /// 放入鱼缸的时间戳，用来计算鱼的年龄和售价
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PutInTime {
      get { return putInTime_; }
      set {
        putInTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FishVat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FishVat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FishInfo, other.FishInfo)) return false;
      if (PutInTime != other.PutInTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (fishInfo_ != null) hash ^= FishInfo.GetHashCode();
      if (PutInTime != 0L) hash ^= PutInTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (fishInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FishInfo);
      }
      if (PutInTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PutInTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (fishInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FishInfo);
      }
      if (PutInTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PutInTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (fishInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FishInfo);
      }
      if (PutInTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PutInTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FishVat other) {
      if (other == null) {
        return;
      }
      if (other.fishInfo_ != null) {
        if (fishInfo_ == null) {
          FishInfo = new global::Pb.FishInfo();
        }
        FishInfo.MergeFrom(other.FishInfo);
      }
      if (other.PutInTime != 0L) {
        PutInTime = other.PutInTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fishInfo_ == null) {
              FishInfo = new global::Pb.FishInfo();
            }
            input.ReadMessage(FishInfo);
            break;
          }
          case 16: {
            PutInTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (fishInfo_ == null) {
              FishInfo = new global::Pb.FishInfo();
            }
            input.ReadMessage(FishInfo);
            break;
          }
          case 16: {
            PutInTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 鱼饵的数据结构
  /// </summary>
  public sealed partial class FishBait : pb::IMessage<FishBait>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FishBait> _parser = new pb::MessageParser<FishBait>(() => new FishBait());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FishBait> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.Z0CommonReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishBait() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishBait(FishBait other) : this() {
      propId_ = other.propId_;
      baitNum_ = other.baitNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishBait Clone() {
      return new FishBait(this);
    }

    /// <summary>Field number for the "propId" field.</summary>
    public const int PropIdFieldNumber = 1;
    private int propId_;
    /// <summary>
    /// 道具id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PropId {
      get { return propId_; }
      set {
        propId_ = value;
      }
    }

    /// <summary>Field number for the "baitNum" field.</summary>
    public const int BaitNumFieldNumber = 2;
    private int baitNum_;
    /// <summary>
    /// 鱼饵数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BaitNum {
      get { return baitNum_; }
      set {
        baitNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FishBait);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FishBait other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PropId != other.PropId) return false;
      if (BaitNum != other.BaitNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PropId != 0) hash ^= PropId.GetHashCode();
      if (BaitNum != 0) hash ^= BaitNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PropId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropId);
      }
      if (BaitNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BaitNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PropId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropId);
      }
      if (BaitNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BaitNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropId);
      }
      if (BaitNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaitNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FishBait other) {
      if (other == null) {
        return;
      }
      if (other.PropId != 0) {
        PropId = other.PropId;
      }
      if (other.BaitNum != 0) {
        BaitNum = other.BaitNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PropId = input.ReadInt32();
            break;
          }
          case 16: {
            BaitNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PropId = input.ReadInt32();
            break;
          }
          case 16: {
            BaitNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 个人钓鱼鱼的日志
  /// </summary>
  public sealed partial class gotFishLog : pb::IMessage<gotFishLog>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<gotFishLog> _parser = new pb::MessageParser<gotFishLog>(() => new gotFishLog());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<gotFishLog> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.Z0CommonReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public gotFishLog() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public gotFishLog(gotFishLog other) : this() {
      fishId_ = other.fishId_;
      happenTime_ = other.happenTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public gotFishLog Clone() {
      return new gotFishLog(this);
    }

    /// <summary>Field number for the "fishId" field.</summary>
    public const int FishIdFieldNumber = 1;
    private int fishId_;
    /// <summary>
    /// 鱼的ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FishId {
      get { return fishId_; }
      set {
        fishId_ = value;
      }
    }

    /// <summary>Field number for the "happenTime" field.</summary>
    public const int HappenTimeFieldNumber = 2;
    private long happenTime_;
    /// <summary>
    /// 发生时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HappenTime {
      get { return happenTime_; }
      set {
        happenTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as gotFishLog);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(gotFishLog other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FishId != other.FishId) return false;
      if (HappenTime != other.HappenTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FishId != 0) hash ^= FishId.GetHashCode();
      if (HappenTime != 0L) hash ^= HappenTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FishId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FishId);
      }
      if (HappenTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(HappenTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FishId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FishId);
      }
      if (HappenTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(HappenTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FishId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishId);
      }
      if (HappenTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HappenTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(gotFishLog other) {
      if (other == null) {
        return;
      }
      if (other.FishId != 0) {
        FishId = other.FishId;
      }
      if (other.HappenTime != 0L) {
        HappenTime = other.HappenTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FishId = input.ReadInt32();
            break;
          }
          case 16: {
            HappenTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FishId = input.ReadInt32();
            break;
          }
          case 16: {
            HappenTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 定义装备的通用结构
  /// </summary>
  public sealed partial class Equipment : pb::IMessage<Equipment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Equipment> _parser = new pb::MessageParser<Equipment>(() => new Equipment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Equipment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.Z0CommonReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Equipment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Equipment(Equipment other) : this() {
      uniqueId_ = other.uniqueId_;
      equipmentId_ = other.equipmentId_;
      star_ = other.star_;
      percent_ = other.percent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Equipment Clone() {
      return new Equipment(this);
    }

    /// <summary>Field number for the "uniqueId" field.</summary>
    public const int UniqueIdFieldNumber = 1;
    private string uniqueId_ = "";
    /// <summary>
    /// 装备的唯一标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UniqueId {
      get { return uniqueId_; }
      set {
        uniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "equipmentId" field.</summary>
    public const int EquipmentIdFieldNumber = 2;
    private int equipmentId_;
    /// <summary>
    /// 装备的id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EquipmentId {
      get { return equipmentId_; }
      set {
        equipmentId_ = value;
      }
    }

    /// <summary>Field number for the "star" field.</summary>
    public const int StarFieldNumber = 3;
    private int star_;
    /// <summary>
    /// 装备的强化星级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Star {
      get { return star_; }
      set {
        star_ = value;
      }
    }

    /// <summary>Field number for the "percent" field.</summary>
    public const int PercentFieldNumber = 4;
    private double percent_;
    /// <summary>
    /// 装备初始的百分比
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Percent {
      get { return percent_; }
      set {
        percent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Equipment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Equipment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UniqueId != other.UniqueId) return false;
      if (EquipmentId != other.EquipmentId) return false;
      if (Star != other.Star) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Percent, other.Percent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UniqueId.Length != 0) hash ^= UniqueId.GetHashCode();
      if (EquipmentId != 0) hash ^= EquipmentId.GetHashCode();
      if (Star != 0) hash ^= Star.GetHashCode();
      if (Percent != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Percent);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UniqueId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UniqueId);
      }
      if (EquipmentId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EquipmentId);
      }
      if (Star != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Star);
      }
      if (Percent != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Percent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UniqueId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UniqueId);
      }
      if (EquipmentId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EquipmentId);
      }
      if (Star != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Star);
      }
      if (Percent != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Percent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UniqueId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UniqueId);
      }
      if (EquipmentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EquipmentId);
      }
      if (Star != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Star);
      }
      if (Percent != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Equipment other) {
      if (other == null) {
        return;
      }
      if (other.UniqueId.Length != 0) {
        UniqueId = other.UniqueId;
      }
      if (other.EquipmentId != 0) {
        EquipmentId = other.EquipmentId;
      }
      if (other.Star != 0) {
        Star = other.Star;
      }
      if (other.Percent != 0D) {
        Percent = other.Percent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UniqueId = input.ReadString();
            break;
          }
          case 16: {
            EquipmentId = input.ReadInt32();
            break;
          }
          case 24: {
            Star = input.ReadInt32();
            break;
          }
          case 33: {
            Percent = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UniqueId = input.ReadString();
            break;
          }
          case 16: {
            EquipmentId = input.ReadInt32();
            break;
          }
          case 24: {
            Star = input.ReadInt32();
            break;
          }
          case 33: {
            Percent = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///主播信息存档的
  /// </summary>
  public sealed partial class AnchorDBInfo : pb::IMessage<AnchorDBInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnchorDBInfo> _parser = new pb::MessageParser<AnchorDBInfo>(() => new AnchorDBInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnchorDBInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.Z0CommonReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnchorDBInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnchorDBInfo(AnchorDBInfo other) : this() {
      accountId_ = other.accountId_;
      nickName_ = other.nickName_;
      headUrl_ = other.headUrl_;
      gameId_ = other.gameId_;
      platformId_ = other.platformId_;
      modeId_ = other.modeId_;
      allGiftValue_ = other.allGiftValue_;
      playerIdList_ = other.playerIdList_.Clone();
      lastLevelId_ = other.lastLevelId_;
      curLevelId_ = other.curLevelId_;
      levelExpList_ = other.levelExpList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnchorDBInfo Clone() {
      return new AnchorDBInfo(this);
    }

    /// <summary>Field number for the "accountId" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private string accountId_ = "";
    /// <summary>
    /// 唯一id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccountId {
      get { return accountId_; }
      set {
        accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickName" field.</summary>
    public const int NickNameFieldNumber = 2;
    private string nickName_ = "";
    /// <summary>
    /// 昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "headUrl" field.</summary>
    public const int HeadUrlFieldNumber = 3;
    private string headUrl_ = "";
    /// <summary>
    /// 头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HeadUrl {
      get { return headUrl_; }
      set {
        headUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 4;
    private int gameId_;
    /// <summary>
    /// 游戏ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameId {
      get { return gameId_; }
      set {
        gameId_ = value;
      }
    }

    /// <summary>Field number for the "platformId" field.</summary>
    public const int PlatformIdFieldNumber = 5;
    private int platformId_;
    /// <summary>
    /// 平台
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlatformId {
      get { return platformId_; }
      set {
        platformId_ = value;
      }
    }

    /// <summary>Field number for the "modeId" field.</summary>
    public const int ModeIdFieldNumber = 6;
    private int modeId_;
    /// <summary>
    /// 游戏模式(官游/野游)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ModeId {
      get { return modeId_; }
      set {
        modeId_ = value;
      }
    }

    /// <summary>Field number for the "allGiftValue" field.</summary>
    public const int AllGiftValueFieldNumber = 7;
    private double allGiftValue_;
    /// <summary>
    /// 总礼物值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AllGiftValue {
      get { return allGiftValue_; }
      set {
        allGiftValue_ = value;
      }
    }

    /// <summary>Field number for the "playerIdList" field.</summary>
    public const int PlayerIdListFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_playerIdList_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> playerIdList_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 主播的玩家列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> PlayerIdList {
      get { return playerIdList_; }
    }

    /// <summary>Field number for the "lastLevelId" field.</summary>
    public const int LastLevelIdFieldNumber = 9;
    private int lastLevelId_;
    /// <summary>
    /// 上一次关卡id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LastLevelId {
      get { return lastLevelId_; }
      set {
        lastLevelId_ = value;
      }
    }

    /// <summary>Field number for the "curLevelId" field.</summary>
    public const int CurLevelIdFieldNumber = 10;
    private int curLevelId_;
    /// <summary>
    /// 当前关卡id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurLevelId {
      get { return curLevelId_; }
      set {
        curLevelId_ = value;
      }
    }

    /// <summary>Field number for the "LevelExpList" field.</summary>
    public const int LevelExpListFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Pb.LevelExp> _repeated_levelExpList_codec
        = pb::FieldCodec.ForMessage(90, global::Pb.LevelExp.Parser);
    private readonly pbc::RepeatedField<global::Pb.LevelExp> levelExpList_ = new pbc::RepeatedField<global::Pb.LevelExp>();
    /// <summary>
    /// 水域的经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Pb.LevelExp> LevelExpList {
      get { return levelExpList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnchorDBInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnchorDBInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (NickName != other.NickName) return false;
      if (HeadUrl != other.HeadUrl) return false;
      if (GameId != other.GameId) return false;
      if (PlatformId != other.PlatformId) return false;
      if (ModeId != other.ModeId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AllGiftValue, other.AllGiftValue)) return false;
      if(!playerIdList_.Equals(other.playerIdList_)) return false;
      if (LastLevelId != other.LastLevelId) return false;
      if (CurLevelId != other.CurLevelId) return false;
      if(!levelExpList_.Equals(other.levelExpList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (HeadUrl.Length != 0) hash ^= HeadUrl.GetHashCode();
      if (GameId != 0) hash ^= GameId.GetHashCode();
      if (PlatformId != 0) hash ^= PlatformId.GetHashCode();
      if (ModeId != 0) hash ^= ModeId.GetHashCode();
      if (AllGiftValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AllGiftValue);
      hash ^= playerIdList_.GetHashCode();
      if (LastLevelId != 0) hash ^= LastLevelId.GetHashCode();
      if (CurLevelId != 0) hash ^= CurLevelId.GetHashCode();
      hash ^= levelExpList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountId);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NickName);
      }
      if (HeadUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HeadUrl);
      }
      if (GameId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GameId);
      }
      if (PlatformId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlatformId);
      }
      if (ModeId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ModeId);
      }
      if (AllGiftValue != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(AllGiftValue);
      }
      playerIdList_.WriteTo(output, _repeated_playerIdList_codec);
      if (LastLevelId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(LastLevelId);
      }
      if (CurLevelId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CurLevelId);
      }
      levelExpList_.WriteTo(output, _repeated_levelExpList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountId);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NickName);
      }
      if (HeadUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HeadUrl);
      }
      if (GameId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GameId);
      }
      if (PlatformId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlatformId);
      }
      if (ModeId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ModeId);
      }
      if (AllGiftValue != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(AllGiftValue);
      }
      playerIdList_.WriteTo(ref output, _repeated_playerIdList_codec);
      if (LastLevelId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(LastLevelId);
      }
      if (CurLevelId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CurLevelId);
      }
      levelExpList_.WriteTo(ref output, _repeated_levelExpList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (HeadUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeadUrl);
      }
      if (GameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameId);
      }
      if (PlatformId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlatformId);
      }
      if (ModeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModeId);
      }
      if (AllGiftValue != 0D) {
        size += 1 + 8;
      }
      size += playerIdList_.CalculateSize(_repeated_playerIdList_codec);
      if (LastLevelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastLevelId);
      }
      if (CurLevelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurLevelId);
      }
      size += levelExpList_.CalculateSize(_repeated_levelExpList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnchorDBInfo other) {
      if (other == null) {
        return;
      }
      if (other.AccountId.Length != 0) {
        AccountId = other.AccountId;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.HeadUrl.Length != 0) {
        HeadUrl = other.HeadUrl;
      }
      if (other.GameId != 0) {
        GameId = other.GameId;
      }
      if (other.PlatformId != 0) {
        PlatformId = other.PlatformId;
      }
      if (other.ModeId != 0) {
        ModeId = other.ModeId;
      }
      if (other.AllGiftValue != 0D) {
        AllGiftValue = other.AllGiftValue;
      }
      playerIdList_.Add(other.playerIdList_);
      if (other.LastLevelId != 0) {
        LastLevelId = other.LastLevelId;
      }
      if (other.CurLevelId != 0) {
        CurLevelId = other.CurLevelId;
      }
      levelExpList_.Add(other.levelExpList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountId = input.ReadString();
            break;
          }
          case 18: {
            NickName = input.ReadString();
            break;
          }
          case 26: {
            HeadUrl = input.ReadString();
            break;
          }
          case 32: {
            GameId = input.ReadInt32();
            break;
          }
          case 40: {
            PlatformId = input.ReadInt32();
            break;
          }
          case 48: {
            ModeId = input.ReadInt32();
            break;
          }
          case 57: {
            AllGiftValue = input.ReadDouble();
            break;
          }
          case 66: {
            playerIdList_.AddEntriesFrom(input, _repeated_playerIdList_codec);
            break;
          }
          case 72: {
            LastLevelId = input.ReadInt32();
            break;
          }
          case 80: {
            CurLevelId = input.ReadInt32();
            break;
          }
          case 90: {
            levelExpList_.AddEntriesFrom(input, _repeated_levelExpList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AccountId = input.ReadString();
            break;
          }
          case 18: {
            NickName = input.ReadString();
            break;
          }
          case 26: {
            HeadUrl = input.ReadString();
            break;
          }
          case 32: {
            GameId = input.ReadInt32();
            break;
          }
          case 40: {
            PlatformId = input.ReadInt32();
            break;
          }
          case 48: {
            ModeId = input.ReadInt32();
            break;
          }
          case 57: {
            AllGiftValue = input.ReadDouble();
            break;
          }
          case 66: {
            playerIdList_.AddEntriesFrom(ref input, _repeated_playerIdList_codec);
            break;
          }
          case 72: {
            LastLevelId = input.ReadInt32();
            break;
          }
          case 80: {
            CurLevelId = input.ReadInt32();
            break;
          }
          case 90: {
            levelExpList_.AddEntriesFrom(ref input, _repeated_levelExpList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 关卡的经验
  /// </summary>
  public sealed partial class LevelExp : pb::IMessage<LevelExp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LevelExp> _parser = new pb::MessageParser<LevelExp>(() => new LevelExp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LevelExp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.Z0CommonReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LevelExp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LevelExp(LevelExp other) : this() {
      levelId_ = other.levelId_;
      exp_ = other.exp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LevelExp Clone() {
      return new LevelExp(this);
    }

    /// <summary>Field number for the "levelId" field.</summary>
    public const int LevelIdFieldNumber = 1;
    private int levelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LevelId {
      get { return levelId_; }
      set {
        levelId_ = value;
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 2;
    private int exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LevelExp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LevelExp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LevelId != other.LevelId) return false;
      if (Exp != other.Exp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LevelId != 0) hash ^= LevelId.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LevelId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LevelId);
      }
      if (Exp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Exp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LevelId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LevelId);
      }
      if (Exp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Exp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LevelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LevelId);
      }
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LevelExp other) {
      if (other == null) {
        return;
      }
      if (other.LevelId != 0) {
        LevelId = other.LevelId;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LevelId = input.ReadInt32();
            break;
          }
          case 16: {
            Exp = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LevelId = input.ReadInt32();
            break;
          }
          case 16: {
            Exp = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OpenBaseVo : pb::IMessage<OpenBaseVo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OpenBaseVo> _parser = new pb::MessageParser<OpenBaseVo>(() => new OpenBaseVo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OpenBaseVo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.Z0CommonReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OpenBaseVo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OpenBaseVo(OpenBaseVo other) : this() {
      openId_ = other.openId_;
      avatarUrl_ = other.avatarUrl_;
      nickName_ = other.nickName_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OpenBaseVo Clone() {
      return new OpenBaseVo(this);
    }

    /// <summary>Field number for the "openId" field.</summary>
    public const int OpenIdFieldNumber = 1;
    private string openId_ = "";
    /// <summary>
    /// openId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OpenId {
      get { return openId_; }
      set {
        openId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatarUrl" field.</summary>
    public const int AvatarUrlFieldNumber = 2;
    private string avatarUrl_ = "";
    /// <summary>
    /// 用户头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AvatarUrl {
      get { return avatarUrl_; }
      set {
        avatarUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickName" field.</summary>
    public const int NickNameFieldNumber = 3;
    private string nickName_ = "";
    /// <summary>
    /// 昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 4;
    private string content_ = "";
    /// <summary>
    /// 评论
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OpenBaseVo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OpenBaseVo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OpenId != other.OpenId) return false;
      if (AvatarUrl != other.AvatarUrl) return false;
      if (NickName != other.NickName) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (OpenId.Length != 0) hash ^= OpenId.GetHashCode();
      if (AvatarUrl.Length != 0) hash ^= AvatarUrl.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OpenId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OpenId);
      }
      if (AvatarUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AvatarUrl);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NickName);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OpenId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OpenId);
      }
      if (AvatarUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AvatarUrl);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NickName);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (OpenId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OpenId);
      }
      if (AvatarUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarUrl);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OpenBaseVo other) {
      if (other == null) {
        return;
      }
      if (other.OpenId.Length != 0) {
        OpenId = other.OpenId;
      }
      if (other.AvatarUrl.Length != 0) {
        AvatarUrl = other.AvatarUrl;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OpenId = input.ReadString();
            break;
          }
          case 18: {
            AvatarUrl = input.ReadString();
            break;
          }
          case 26: {
            NickName = input.ReadString();
            break;
          }
          case 34: {
            Content = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OpenId = input.ReadString();
            break;
          }
          case 18: {
            AvatarUrl = input.ReadString();
            break;
          }
          case 26: {
            NickName = input.ReadString();
            break;
          }
          case 34: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TaskInfo : pb::IMessage<TaskInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskInfo> _parser = new pb::MessageParser<TaskInfo>(() => new TaskInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.Z0CommonReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskInfo(TaskInfo other) : this() {
      taskUid_ = other.taskUid_;
      taskId_ = other.taskId_;
      taskStatus_ = other.taskStatus_;
      taskProgress_ = other.taskProgress_;
      endTime_ = other.endTime_;
      startTime_ = other.startTime_;
      serverALlTaskProgress_ = other.serverALlTaskProgress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskInfo Clone() {
      return new TaskInfo(this);
    }

    /// <summary>Field number for the "taskUid" field.</summary>
    public const int TaskUidFieldNumber = 1;
    private string taskUid_ = "";
    /// <summary>
    /// taskUid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TaskUid {
      get { return taskUid_; }
      set {
        taskUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taskId" field.</summary>
    public const int TaskIdFieldNumber = 2;
    private int taskId_;
    /// <summary>
    /// 任务id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TaskId {
      get { return taskId_; }
      set {
        taskId_ = value;
      }
    }

    /// <summary>Field number for the "taskStatus" field.</summary>
    public const int TaskStatusFieldNumber = 3;
    private global::Pb.TaskStatus taskStatus_ = global::Pb.TaskStatus.NotStarted;
    /// <summary>
    /// 任务状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Pb.TaskStatus TaskStatus {
      get { return taskStatus_; }
      set {
        taskStatus_ = value;
      }
    }

    /// <summary>Field number for the "taskProgress" field.</summary>
    public const int TaskProgressFieldNumber = 4;
    private int taskProgress_;
    /// <summary>
    /// 任务进度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TaskProgress {
      get { return taskProgress_; }
      set {
        taskProgress_ = value;
      }
    }

    /// <summary>Field number for the "endTime" field.</summary>
    public const int EndTimeFieldNumber = 5;
    private long endTime_;
    /// <summary>
    /// 任务结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 6;
    private long startTime_;
    /// <summary>
    /// 任务开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "serverALlTaskProgress" field.</summary>
    public const int ServerALlTaskProgressFieldNumber = 7;
    private int serverALlTaskProgress_;
    /// <summary>
    /// 【全服任务】使用的进度值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ServerALlTaskProgress {
      get { return serverALlTaskProgress_; }
      set {
        serverALlTaskProgress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskUid != other.TaskUid) return false;
      if (TaskId != other.TaskId) return false;
      if (TaskStatus != other.TaskStatus) return false;
      if (TaskProgress != other.TaskProgress) return false;
      if (EndTime != other.EndTime) return false;
      if (StartTime != other.StartTime) return false;
      if (ServerALlTaskProgress != other.ServerALlTaskProgress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskUid.Length != 0) hash ^= TaskUid.GetHashCode();
      if (TaskId != 0) hash ^= TaskId.GetHashCode();
      if (TaskStatus != global::Pb.TaskStatus.NotStarted) hash ^= TaskStatus.GetHashCode();
      if (TaskProgress != 0) hash ^= TaskProgress.GetHashCode();
      if (EndTime != 0L) hash ^= EndTime.GetHashCode();
      if (StartTime != 0L) hash ^= StartTime.GetHashCode();
      if (ServerALlTaskProgress != 0) hash ^= ServerALlTaskProgress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TaskUid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskUid);
      }
      if (TaskId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TaskId);
      }
      if (TaskStatus != global::Pb.TaskStatus.NotStarted) {
        output.WriteRawTag(24);
        output.WriteEnum((int) TaskStatus);
      }
      if (TaskProgress != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TaskProgress);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(EndTime);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(StartTime);
      }
      if (ServerALlTaskProgress != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ServerALlTaskProgress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TaskUid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskUid);
      }
      if (TaskId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TaskId);
      }
      if (TaskStatus != global::Pb.TaskStatus.NotStarted) {
        output.WriteRawTag(24);
        output.WriteEnum((int) TaskStatus);
      }
      if (TaskProgress != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TaskProgress);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(EndTime);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(StartTime);
      }
      if (ServerALlTaskProgress != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ServerALlTaskProgress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TaskUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskUid);
      }
      if (TaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
      }
      if (TaskStatus != global::Pb.TaskStatus.NotStarted) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TaskStatus);
      }
      if (TaskProgress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskProgress);
      }
      if (EndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (StartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (ServerALlTaskProgress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerALlTaskProgress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskInfo other) {
      if (other == null) {
        return;
      }
      if (other.TaskUid.Length != 0) {
        TaskUid = other.TaskUid;
      }
      if (other.TaskId != 0) {
        TaskId = other.TaskId;
      }
      if (other.TaskStatus != global::Pb.TaskStatus.NotStarted) {
        TaskStatus = other.TaskStatus;
      }
      if (other.TaskProgress != 0) {
        TaskProgress = other.TaskProgress;
      }
      if (other.EndTime != 0L) {
        EndTime = other.EndTime;
      }
      if (other.StartTime != 0L) {
        StartTime = other.StartTime;
      }
      if (other.ServerALlTaskProgress != 0) {
        ServerALlTaskProgress = other.ServerALlTaskProgress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TaskUid = input.ReadString();
            break;
          }
          case 16: {
            TaskId = input.ReadInt32();
            break;
          }
          case 24: {
            TaskStatus = (global::Pb.TaskStatus) input.ReadEnum();
            break;
          }
          case 32: {
            TaskProgress = input.ReadInt32();
            break;
          }
          case 40: {
            EndTime = input.ReadInt64();
            break;
          }
          case 48: {
            StartTime = input.ReadInt64();
            break;
          }
          case 56: {
            ServerALlTaskProgress = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TaskUid = input.ReadString();
            break;
          }
          case 16: {
            TaskId = input.ReadInt32();
            break;
          }
          case 24: {
            TaskStatus = (global::Pb.TaskStatus) input.ReadEnum();
            break;
          }
          case 32: {
            TaskProgress = input.ReadInt32();
            break;
          }
          case 40: {
            EndTime = input.ReadInt64();
            break;
          }
          case 48: {
            StartTime = input.ReadInt64();
            break;
          }
          case 56: {
            ServerALlTaskProgress = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
